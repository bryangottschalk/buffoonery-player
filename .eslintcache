[{"C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\index.tsx":"1","C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\reportWebVitals.ts":"2","C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\App.tsx":"3","C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\store\\index.tsx":"4","C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\store\\slices\\application.tsx":"5","C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\components\\index.tsx":"6","C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\components\\Layout\\Header.tsx":"7","C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\components\\Layout\\Navbar.tsx":"8","C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\routes.js":"9","C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\history.js":"10","C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\images\\index.tsx":"11"},{"size":713,"mtime":1607276490839,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":938,"mtime":1607277270708,"results":"15","hashOfConfig":"13"},{"size":255,"mtime":1607006156199,"results":"16","hashOfConfig":"13"},{"size":647,"mtime":1607006156200,"results":"17","hashOfConfig":"13"},{"size":369,"mtime":1607274203435,"results":"18","hashOfConfig":"13"},{"size":6535,"mtime":1607277385531,"results":"19","hashOfConfig":"13"},{"size":2919,"mtime":1607274766307,"results":"20","hashOfConfig":"13"},{"size":348,"mtime":1607276517148,"results":"21","hashOfConfig":"13"},{"size":203,"mtime":1607274587773,"results":"22","hashOfConfig":"13"},{"size":271,"mtime":1607277384174,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1w4aql8",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\index.tsx",[],["54","55"],"C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\reportWebVitals.ts",[],"C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\App.tsx",["56"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Navbar, Header } from './components/';\nimport Routes from './routes';\nimport { ThemeProvider } from '@material-ui/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2D7BC8'\n    },\n    secondary: {\n      main: grey[700]\n    }\n  },\n  overrides: {\n    MuiButton: {\n      label: {\n        whiteSpace: 'nowrap'\n      }\n    },\n    MuiTypography: {\n      subtitle1: {\n        fontWeight: 'bold'\n      },\n      h6: {\n        fontWeight: 'bold'\n      },\n      h5: {\n        fontSize: 15\n      }\n    }\n  }\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <Header />\n        <Navbar />\n        <Routes />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\store\\index.tsx",[],"C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\store\\slices\\application.tsx",["57","58"],"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\ninterface ApplicationState {\r\n  myConnectionId: string;\r\n}\r\n\r\nconst initialState: ApplicationState = {\r\n    myConnectionId: ''\r\n};\r\n\r\nconst applicationSlice = createSlice({\r\n  name: 'application',\r\n  initialState,\r\n  reducers: {\r\n    setMyConnectionId: (state, { payload }) => {\r\n      state.myConnectionId = payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setMyConnectionId } = applicationSlice.actions;\r\n\r\nexport const getApplicationState = (state: { application: ApplicationState; }) => state.application;\r\n\r\nexport default applicationSlice.reducer;\r\n","C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\components\\index.tsx",[],"C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\components\\Layout\\Header.tsx",["59","60","61","62","63"],"import React, { ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport history from '../../history';\nimport grey from '@material-ui/core/colors/grey';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    color: grey[700],\n    background: 'white'\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  },\n  centerLogo: {\n    // justifyContent: 'center'\n  }\n}));\n\ninterface Props {}\n\nexport default function Header({}: Props): ReactElement {\n  const dispatch = useDispatch();\n\n\n  const classes = useStyles({});\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [openAfterDelay, setOpenAfterDelay] = React.useState(false);\n\n  const delayBeforeShowingIcons = (open: boolean) => {\n    //delay waits for drawer open/close animation\n    if (open) {\n      setOpenAfterDelay(true);\n    } else {\n      setTimeout(() => {\n        setOpenAfterDelay(false);\n      }, 250);\n    }\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n    delayBeforeShowingIcons(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n    delayBeforeShowingIcons(false);\n  };\n\n  return (\n    <div>\n      \n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: open\n            })}\n          >\n            <Toolbar className={classes.centerLogo}>\n            \n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={handleDrawerOpen}\n                    edge=\"start\"\n                    className={clsx(classes.menuButton, open && classes.hide)}\n                    style={{ marginRight: 'auto' }}\n                  >\n                    <MenuIcon />\n                  </IconButton>\n                  <h1>Buffoonery</h1>\n                  {/* <Link to=\"/projects\">\n                      Buffoonery\n                    <img\n                      style={{ width: 100, marginLeft: 10 }}\n                      src={ReachLogo}\n                      alt=\"Logo\"\n                    ></img>\n                  </Link> */}\n                </div>\n            </Toolbar>\n          </AppBar>\n\n          <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            <div className={classes.drawerHeader}>\n              <IconButton onClick={handleDrawerClose}>\n                {theme.direction === 'ltr' ? (\n                  <ChevronLeftIcon />\n                ) : (\n                  <ChevronRightIcon />\n                )}\n              </IconButton>\n            </div>\n            <Divider />\n            <List>\n              {['My Profile', 'Logout'].map((text, index) => (\n                <ListItem\n                  button\n                  key={text}\n                  {...(text === 'Logout' && {\n                    onClick: async () => {\n                      console.log('signing out onClick');\n                      // localStorage.clear();\n                      // history.push('/');\n                      //dispatch(fetchLogout());\n                      handleDrawerClose();\n                    }\n                  })}\n                  {...(text === 'My Profile' && {\n                    onClick: () => {\n                      handleDrawerClose();\n                      history.push('/myprofile');\n                    }\n                  })}\n                >\n                  <ListItemIcon>\n                    {index % 2 === 0 ? (\n                      <AccountCircleIcon />\n                    ) : (\n                      <ExitToAppIcon />\n                    )}\n                  </ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n          </Drawer>\n\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: open\n            })}\n          >\n            <div style={{ height: '10px' }} />\n          </main>\n        </div>\n      \n    </div>\n  );\n}\n","C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\components\\Layout\\Navbar.tsx",["64","65","66","67","68"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\nimport EmojiTransportationIcon from '@material-ui/icons/EmojiTransportation';\nimport grey from '@material-ui/core/colors/grey';\nimport PeopleIcon from '@material-ui/icons/People';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport { useSelector, useDispatch } from 'react-redux';\nimport history from '../../history';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontSize: 12\n  },\n  overrides: {\n    MuiBottomNavigationAction: {\n      root: {\n        '&$selected': {\n          color: '#2D7BC8'\n        },\n        margin: '0px -15px',\n        padding: '0px 15px',\n        color: grey[700]\n      }\n    }\n  }\n});\n\nconst useStyles = makeStyles({\n  stickToBottom: {\n    width: '100%',\n    height: '75px',\n    position: 'fixed',\n    bottom: 0,\n    backgroundColor: 'white',\n    zIndex: 1\n  }\n});\n\nfunction Navbar(props: any) {\n  const classes = useStyles(props);\n\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <nav>\n          <BottomNavigation\n            value=\"test\"\n            className={classes.stickToBottom}\n          >\n            <BottomNavigationAction\n              component={Link}\n              to=\"/projects\"\n              label=\"Projects\"\n              value=\"projects\"\n              icon={<EmojiTransportationIcon style={{ fontSize: 30 }} />}\n            />\n            <BottomNavigationAction\n              component={Link}\n              to=\"/feed\"\n              label=\"Feed\"\n              value=\"feed\"\n              icon={<InsertCommentIcon style={{ fontSize: 30 }} />}\n            />\n            <BottomNavigationAction\n              component={Link}\n              to=\"/participate\"\n              label=\"Participate\"\n              value=\"participate\"\n              icon={<PeopleIcon style={{ fontSize: 30 }} />}\n            />\n            <BottomNavigationAction\n              component={Link}\n              to=\"/dashboard\"\n              label=\"Dashboard\"\n              value=\"dashboard\"\n              icon={<AssessmentIcon style={{ fontSize: 30 }} />}\n            />\n            <BottomNavigationAction\n              component={Link}\n              to=\"/notifications\"\n              label=\"Notifications\"\n              value=\"notifications\"\n              icon={<NotificationsIcon style={{ fontSize: 30 }} />}\n            />\n          </BottomNavigation>\n      </nav>\n    </MuiThemeProvider>\n  );\n}\nexport default Navbar;\n","C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\routes.js",["69","70","71","72","73"],"import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  App\n} from './components';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nconst Routes = (props) => {\n\n  return (\n    <Switch>\n      {/* <Route exact path=\"/\" component={App}></Route> */}\n    </Switch>\n  );\n};\n\nexport default Routes;\n",["74","75"],"C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\history.js",[],"C:\\Users\\12488\\Desktop\\Personal_Projects\\buffoonery-player\\src\\images\\index.tsx",[],["76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":12},{"ruleId":"82","severity":1,"message":"86","line":1,"column":23,"nodeType":"84","messageId":"85","endLine":1,"endColumn":39},{"ruleId":"82","severity":1,"message":"87","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":13},{"ruleId":"82","severity":1,"message":"88","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},{"ruleId":"82","severity":1,"message":"89","line":20,"column":10,"nodeType":"84","messageId":"85","endLine":20,"endColumn":21},{"ruleId":"90","severity":1,"message":"91","line":89,"column":32,"nodeType":"92","messageId":"93","endLine":89,"endColumn":41},{"ruleId":"82","severity":1,"message":"94","line":90,"column":9,"nodeType":"84","messageId":"85","endLine":90,"endColumn":17},{"ruleId":"82","severity":1,"message":"95","line":96,"column":10,"nodeType":"84","messageId":"85","endLine":96,"endColumn":24},{"ruleId":"82","severity":1,"message":"96","line":2,"column":17,"nodeType":"84","messageId":"85","endLine":2,"endColumn":27},{"ruleId":"82","severity":1,"message":"97","line":2,"column":29,"nodeType":"84","messageId":"85","endLine":2,"endColumn":38},{"ruleId":"82","severity":1,"message":"89","line":14,"column":10,"nodeType":"84","messageId":"85","endLine":14,"endColumn":21},{"ruleId":"82","severity":1,"message":"98","line":14,"column":23,"nodeType":"84","messageId":"85","endLine":14,"endColumn":34},{"ruleId":"82","severity":1,"message":"99","line":15,"column":8,"nodeType":"84","messageId":"85","endLine":15,"endColumn":15},{"ruleId":"100","severity":1,"message":"97","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"100","severity":1,"message":"101","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":15},{"ruleId":"100","severity":1,"message":"102","line":4,"column":3,"nodeType":"84","messageId":"85","endLine":4,"endColumn":6},{"ruleId":"100","severity":1,"message":"89","line":6,"column":10,"nodeType":"84","messageId":"85","endLine":6,"endColumn":21},{"ruleId":"100","severity":1,"message":"98","line":6,"column":23,"nodeType":"84","messageId":"85","endLine":6,"endColumn":34},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"103"},{"ruleId":"80","replacedBy":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'createAsyncThunk' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'useSelector' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'dispatch' is assigned a value but never used.","'openAfterDelay' is assigned a value but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'history' is defined but never used.","no-unused-vars","'Route' is defined but never used.","'App' is defined but never used.",["105"],["106"],"no-global-assign","no-unsafe-negation"]