[{"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/index.tsx":"1","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/history.js":"2","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/reportWebVitals.ts":"3","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/App.tsx":"4","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/routes.js":"5","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/components/index.tsx":"6","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/store/slices/application.tsx":"7","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/components/Layout/Navbar.tsx":"8","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/components/Layout/Header.tsx":"9","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/components/Contribute/index.tsx":"10","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/components/Play/index.tsx":"11","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/store/slices/user.tsx":"12","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/images/index.tsx":"13","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/store/index.js":"14","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/store/slices/websocket.tsx":"15","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/components/Play/CommentList.tsx":"16","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/components/Play/Comment.tsx":"17","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/store/slices/contribute.tsx":"18"},{"size":713,"mtime":1607281469942,"results":"19","hashOfConfig":"20"},{"size":203,"mtime":1607281469942,"results":"21","hashOfConfig":"20"},{"size":425,"mtime":1606959069677,"results":"22","hashOfConfig":"20"},{"size":938,"mtime":1607290524110,"results":"23","hashOfConfig":"20"},{"size":517,"mtime":1608268350261,"results":"24","hashOfConfig":"20"},{"size":579,"mtime":1607907545359,"results":"25","hashOfConfig":"20"},{"size":3277,"mtime":1607908007784,"results":"26","hashOfConfig":"20"},{"size":2789,"mtime":1608791646935,"results":"27","hashOfConfig":"20"},{"size":6298,"mtime":1607296543586,"results":"28","hashOfConfig":"20"},{"size":4032,"mtime":1608302862675,"results":"29","hashOfConfig":"20"},{"size":6158,"mtime":1608265609149,"results":"30","hashOfConfig":"20"},{"size":228,"mtime":1607902318539,"results":"31","hashOfConfig":"20"},{"size":257,"mtime":1607281469942,"results":"32","hashOfConfig":"20"},{"size":1320,"mtime":1608265522508,"results":"33","hashOfConfig":"20"},{"size":1300,"mtime":1607909125911,"results":"34","hashOfConfig":"20"},{"size":629,"mtime":1607908798029,"results":"35","hashOfConfig":"20"},{"size":245,"mtime":1608011267334,"results":"36","hashOfConfig":"20"},{"size":3026,"mtime":1608789744696,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1726ow1",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/index.tsx",[],["83","84"],"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/history.js",[],["85","86"],"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/reportWebVitals.ts",[],"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/App.tsx",["87","88"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Navbar, Header } from './components/';\nimport Routes from './routes';\nimport { ThemeProvider } from '@material-ui/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#19003C'\n    },\n    secondary: {\n      main: '#19003C'\n    }\n  },\n  overrides: {\n    MuiButton: {\n      label: {\n        whiteSpace: 'nowrap'\n      }\n    },\n    MuiTypography: {\n      subtitle1: {\n        fontWeight: 'bold'\n      },\n      h6: {\n        fontWeight: 'bold'\n      },\n      h5: {\n        fontSize: 15\n      }\n    }\n  }\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <Header />\n        <Navbar />\n        <Routes />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/routes.js",[],"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/components/index.tsx",[],"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/store/slices/application.tsx",["89","90","91","92"],"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { connect, send } from '@giantmachines/redux-websocket';\r\nimport store from '../../store';\r\ninterface ApplicationState {\r\n  websocket: any;\r\n  myConnectionUrl: string;\r\n  navigationTab: string;\r\n  isConnected: boolean;\r\n  loading: boolean;\r\n  hasErrors: boolean;\r\n  errorMsg: string;\r\n}\r\n\r\nconst initialState: ApplicationState = {\r\n  websocket: null,\r\n  myConnectionUrl: '',\r\n  navigationTab: '',\r\n  isConnected: false,\r\n  loading: false,\r\n  hasErrors: false,\r\n  errorMsg: ''\r\n};\r\n\r\nconst applicationSlice = createSlice({\r\n  name: 'application',\r\n  initialState,\r\n  reducers: {\r\n    setMyConnectionUrl: (state, { payload }) => {\r\n      state.myConnectionUrl = payload;\r\n    },\r\n    setNavigationTab: (state, { payload }) => {\r\n      state.navigationTab = payload;\r\n    },\r\n    connectToRoom: (state) => {\r\n      state.loading = true;\r\n    },\r\n    connectToRoomFailure: (state, { payload }) => {\r\n      console.log('ðŸš€ ~ file: application.tsx ~ line 38 ~ payload', payload);\r\n      state.loading = false;\r\n      state.isConnected = false;\r\n      state.hasErrors = true;\r\n      state.errorMsg = payload;\r\n    },\r\n    connectToRoomSuccess: (state) => {\r\n      state.isConnected = true;\r\n      state.loading = false;\r\n      state.hasErrors = false;\r\n    },\r\n    sendWebsocketMessage: (state) => {\r\n      state.loading = true;\r\n    },\r\n    sendWebsocketMessageFailure: (state, { payload }) => {\r\n      state.loading = false;\r\n      state.hasErrors = true;\r\n      state.errorMsg = payload;\r\n    },\r\n    sendWebsocketMessageSuccess: (state) => {\r\n      state.loading = false;\r\n      state.hasErrors = false;\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  setMyConnectionUrl,\r\n  setNavigationTab,\r\n  connectToRoom,\r\n  connectToRoomSuccess,\r\n  connectToRoomFailure,\r\n  sendWebsocketMessage,\r\n  sendWebsocketMessageSuccess,\r\n  sendWebsocketMessageFailure\r\n} = applicationSlice.actions;\r\n\r\nexport const getApplicationState = (state: { application: any }) =>\r\n  state.application;\r\n\r\nexport const fetchConnectToRoom = createAsyncThunk(\r\n  'application/fetchConnectToRoom',\r\n  async (\r\n    input: { connectionUrl: string; roomcode: string; name: string },\r\n    thunkAPI: any\r\n  ) => {\r\n    const { connectionUrl, roomcode, name } = input;\r\n    try {\r\n      thunkAPI.dispatch(connectToRoom());\r\n      await thunkAPI.dispatch(connect(connectionUrl));\r\n      thunkAPI.dispatch(connectToRoomSuccess());\r\n    } catch (err) {\r\n      thunkAPI.dispatch(connectToRoomFailure(err.message));\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchSendWebsocketMessage = createAsyncThunk(\r\n  'application/sendWebsocketMessage',\r\n  async (\r\n    input: { comment: string; user: string; roomcode: string },\r\n    thunkAPI: any\r\n  ) => {\r\n    const { comment, roomcode } = input;\r\n    thunkAPI.dispatch(sendWebsocketMessage());\r\n\r\n    const connectMsg = {\r\n      action: 'sendmessage',\r\n      data: {\r\n        roomcode: roomcode,\r\n        comment\r\n      }\r\n    };\r\n    await thunkAPI.dispatch(send(connectMsg));\r\n    thunkAPI.dispatch(sendWebsocketMessageSuccess());\r\n\r\n    try {\r\n    } catch (err) {\r\n      thunkAPI.dispatch(sendWebsocketMessageFailure(err.message));\r\n    }\r\n  }\r\n);\r\n\r\nexport default applicationSlice.reducer;\r\n","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/components/Layout/Navbar.tsx",["93","94","95","96","97","98","99","100"],"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/components/Layout/Header.tsx",["101","102","103","104","105"],"import React, { ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport history from '../../history';\nimport grey from '@material-ui/core/colors/grey';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { Typography } from '@material-ui/core';\nimport { setNavigationTab } from '../../store/slices/application';\nimport { Logo } from '../../images';\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    marginBottom: 32\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    color: 'white',\n    background: 'primary'\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  },\n  centerLogo: {\n    // justifyContent: 'flex-end'\n  }\n}));\n\ninterface Props {}\n\nexport default function Header({}: Props): ReactElement {\n  const dispatch = useDispatch();\n\n  const classes = useStyles({});\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [openAfterDelay, setOpenAfterDelay] = React.useState(false);\n\n  const delayBeforeShowingIcons = (open: boolean) => {\n    //delay waits for drawer open/close animation\n    if (open) {\n      setOpenAfterDelay(true);\n    } else {\n      setTimeout(() => {\n        setOpenAfterDelay(false);\n      }, 250);\n    }\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n    delayBeforeShowingIcons(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n    delayBeforeShowingIcons(false);\n  };\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open\n          })}\n        >\n          <Toolbar style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\">Buffoonery</Typography>\n            <div style={{ marginLeft: 'auto' }}>\n              <img\n                style={{\n                  justifySelf: 'flex-end',\n                  width: 40,\n                  paddingTop: 5\n                }}\n                src={Logo}\n                alt=\"Logo\"\n              ></img>\n            </div>\n          </Toolbar>\n        </AppBar>\n\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'ltr' ? (\n                <ChevronLeftIcon />\n              ) : (\n                <ChevronRightIcon />\n              )}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {['My Profile', 'Logout'].map((text, index) => (\n              <ListItem\n                button\n                key={text}\n                {...(text === 'Logout' && {\n                  onClick: async () => {\n                    dispatch(setNavigationTab('play'));\n                    history.push('/play');\n                    handleDrawerClose();\n                  }\n                })}\n                {...(text === 'My Profile' && {\n                  onClick: () => {\n                    dispatch(setNavigationTab('myprofile'));\n                    handleDrawerClose();\n                    history.push('/myprofile');\n                  }\n                })}\n              >\n                <ListItemIcon>\n                  {index % 2 === 0 ? <AccountCircleIcon /> : <ExitToAppIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open\n          })}\n        >\n          <div style={{ height: '10px' }} />\n        </main>\n      </div>\n    </div>\n  );\n}\n","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/components/Contribute/index.tsx",["106","107"],"import React, {\n  ReactElement,\n  RefObject,\n  useEffect,\n  useRef,\n  useState\n} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchCategories,\n  fetchSavePrompt\n} from '../../store/slices/contribute';\n\ninterface Props {}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 'calc(100% - 28px)'\n    }\n  }\n}));\n\nexport default function Contribute({}: Props): ReactElement {\n  const dispatch = useDispatch();\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const { categories, loading, hasErrors, errorMsg } = useSelector(\n    (state: any) => state\n  ).contributeSlice;\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (!categories.length && !loading && !hasErrors) {\n      dispatch(fetchCategories());\n    }\n  });\n\n  const handleChangeCategory = (e: any) => {\n    setSelectedCategory(e.target.value);\n  };\n\n  const promptValueRef = useRef<any>(''); //creating a refernce for TextField Component\n  const handleSubmitPrompt = (e: any) => {\n    e.preventDefault();\n    dispatch(\n      fetchSavePrompt({\n        category: selectedCategory,\n        prompt: promptValueRef.current.value\n      })\n    );\n  };\n\n  return (\n    <div style={{ margin: '0px 16px' }}>\n      <div style={{ marginBottom: 20 }}>\n        <div>Contribute to this app! Submit prompt suggestions below.</div>\n      </div>\n\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <FormControl variant=\"outlined\">\n          <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\n          <Select\n            label=\"Category\"\n            value={selectedCategory}\n            onChange={handleChangeCategory}\n          >\n            {categories.length > 0 &&\n              categories.map((c: any, idx: number) => (\n                <MenuItem key={idx} value={c.category}>\n                  {c.category}\n                </MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n        <TextField\n          inputRef={promptValueRef}\n          id=\"outlined-basic\"\n          label=\"Prompt\"\n          variant=\"outlined\"\n        />\n        <Button\n          type=\"submit\"\n          onClick={handleSubmitPrompt}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Submit\n        </Button>\n      </form>\n      {selectedCategory && (\n        <React.Fragment>\n          <h2>Existing prompts for this category:</h2>\n\n          <div\n            style={{\n              height: 250,\n              overflowY: 'scroll',\n              textAlign: 'left',\n              margin: '10px 20px 0px 20px'\n            }}\n          >\n            {selectedCategory &&\n              categories\n                .find((c: any) => c.category === selectedCategory)\n                .prompts.map(\n                  (\n                    p: {\n                      submittedBy: string;\n                      prompt: string;\n                      timestamp: string;\n                    },\n                    idx: number\n                  ) => (\n                    <div key={idx} style={{ marginBottom: 12 }}>\n                      <div>\n                        <strong>Prompt:</strong> {p.prompt}\n                      </div>\n                      <div>\n                        <strong>Submitted By:</strong> {p.submittedBy}\n                      </div>\n                      <div>\n                        <strong>Timestamp: </strong>\n                        {p.timestamp}\n                      </div>\n                    </div>\n                  )\n                )}\n          </div>\n        </React.Fragment>\n      )}\n\n      {hasErrors && errorMsg && (\n        <div style={{ marginTop: 10, color: 'red' }}>{errorMsg}</div>\n      )}\n      {loading && <CircularProgress />}\n    </div>\n  );\n}\n","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/components/Play/index.tsx",["108","109","110","111","112","113","114","115"],"// @ts-nocheck\nimport React, { ReactElement, useState, useRef, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport {\n  fetchConnectToRoom,\n  setMyConnectionUrl,\n  fetchSendWebsocketMessage\n} from '../../store/slices/application';\nimport { fetchCommentsThunk } from '../../store/slices/websocket';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { connect, send } from '@giantmachines/redux-websocket';\nimport store from '../../store';\nimport { CommentList } from '../';\ninterface Props {}\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 'calc(100% - 28px)'\n    }\n  }\n}));\n\nexport default function Play({}: Props): ReactElement {\n  const dispatch = useDispatch();\n  const { loading, hasErrors, errorMsg, isConnected, comments } = useSelector(\n    (state) => state\n  ).applicationSlice;\n\n  // console.log('ðŸš€ ~ file: index.tsx ~ line 24 ~ Play ~ hasErrors', hasErrors);\n  // console.log('ðŸš€ ~ file: index.tsx ~ line 24 ~ Play ~ loading', loading);\n\n  const [roomcode, setRoomcode] = useState('');\n  const [name, setName] = useState('');\n  const [isPlayBtnDisabled, setIsPlayBtnDisabled] = useState(true);\n  useEffect(() => {\n    if (roomcode && isConnected) {\n      dispatch(fetchCommentsThunk(roomcode));\n    }\n  }, [dispatch, isConnected, roomcode]);\n  if (roomcode.length === 4 && name.length > 0 && isPlayBtnDisabled) {\n    setIsPlayBtnDisabled(false);\n  }\n  if ((roomcode.length < 4 || name.length === 0) && !isPlayBtnDisabled) {\n    setIsPlayBtnDisabled(true);\n  }\n  const [chatMsg, setChatMsg] = useState('');\n  const classes = useStyles();\n  function iconStyles() {\n    return {\n      successIcon: {\n        color: 'green'\n      },\n      errorIcon: {\n        color: 'red'\n      }\n    };\n  }\n  const classes2 = makeStyles(iconStyles);\n  const handleSubmit = (event: any) => {\n    //setRoomcode('');\n    //setName('');\n    event.preventDefault();\n\n    const connectionUrl = `wss://da6wisihu2.execute-api.us-east-1.amazonaws.com/dev?roomcode=${roomcode}&name=${name}`;\n    dispatch(setMyConnectionUrl(connectionUrl));\n    //store.dispatch(connect(connectionUrl));\n    dispatch(fetchConnectToRoom({ connectionUrl, roomcode, name }));\n  };\n\n  const sendChatMsg = () => {\n    console.log('in send chat msg');\n    dispatch(\n      fetchSendWebsocketMessage({\n        comment: {\n          chatMsg,\n          name,\n          timestamp: new Date().toLocaleString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true\n          })\n        },\n        roomcode\n      })\n    );\n    setChatMsg('');\n  };\n  return (\n    <div style={{ margin: '0px 16px' }}>\n      {!isConnected ? (\n        <React.Fragment>\n          <div style={{ marginBottom: 20 }}>\n            Enter your roomcode from the host site. To start a lobby go to{' '}\n            <a href=\"https://host.buffoonery.io\" target=\"_blank\">\n              host.buffoonery.io\n            </a>{' '}\n            on a computer or smart TV.\n          </div>\n          <form\n            onSubmit={handleSubmit}\n            className={classes.root}\n            noValidate\n            autoComplete=\"off\"\n          >\n            <TextField\n              inputProps={{ maxLength: 4 }}\n              value={roomcode}\n              onInput={(e: any) => setRoomcode(e.target.value.toUpperCase())}\n              id=\"outlined-basic\"\n              label=\"Roomcode\"\n              variant=\"outlined\"\n            />\n            <TextField\n              inputProps={{ maxLength: 30 }}\n              value={name}\n              onInput={(e: any) => setName(e.target.value)}\n              id=\"outlined-basic\"\n              label=\"Name\"\n              variant=\"outlined\"\n            />\n            <Button\n              disabled={isPlayBtnDisabled}\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Play\n            </Button>\n          </form>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <div\n            style={{\n              height: '50%',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'space-between'\n            }}\n          >\n            <div\n              style={{\n                alignItems: 'space-between',\n                justifyContent: 'center',\n                margin: 16\n              }}\n            >\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                {' '}\n                <div style={{ marginRight: 8 }}>You're connected!</div>{' '}\n                <CheckCircleIcon className={classes2.successIcon} />\n              </div>\n              <br></br>\n              <TextField\n                style={{ width: 300 }}\n                value={chatMsg}\n                onInput={(e: any) => setChatMsg(e.target.value)}\n                id=\"outlined-basic\"\n                label=\"Message room\"\n                variant=\"outlined\"\n              />\n            </div>\n\n            <div>\n              <br></br>\n              <Button\n                value={chatMsg}\n                onClick={sendChatMsg}\n                style={{ width: 300 }}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Submit\n              </Button>\n            </div>\n            <br></br>\n            <div>{`Roomcode: ${roomcode}`}</div>\n            <div>{`Name: ${name}`}</div>\n          </div>\n          <CommentList></CommentList>\n        </React.Fragment>\n      )}\n      {loading && <CircularProgress />}\n      {hasErrors && errorMsg && (\n        <React.Fragment>\n          <div style={{ color: 'red' }}>{errorMsg}</div>\n          <ReportProblemIcon className={classes2.errorIcon} />\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/store/slices/user.tsx",[],"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/images/index.tsx",[],"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/store/index.js",["116"],"import {\n  combineReducers,\n  configureStore,\n  getDefaultMiddleware\n} from '@reduxjs/toolkit';\nimport reduxWebsocket from '@giantmachines/redux-websocket';\n\nimport applicationSlice from './slices/application';\nimport userSlice from './slices/user';\nimport contributeSlice from './slices/contribute';\nimport websocket from './slices/websocket';\n\nexport const reducer = combineReducers({\n  contributeSlice,\n  applicationSlice,\n  userSlice,\n  websocket // for use with actions dispatched from redux-websocket package\n});\n\nconst reduxWebsocketMiddleware = reduxWebsocket({\n  dateSerializer: (date) => {\n    console.log('ðŸš€ ~ file: index.js ~ line 20 ~ date', date);\n    return date.toString();\n  }\n});\n\nconst store = configureStore({\n  reducer,\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware({\n      serializableCheck: {\n        // Ignore these action types\n        ignoredActions: [\n          'REDUX_WEBSOCKET::CONNECT',\n          'REDUX_WEBSOCKET::OPEN',\n          'REDUX_WEBSOCKET::MESSAGE',\n          'REDUX_WEBSOCKET::SEND'\n        ],\n        // Ignore these field paths in all actions\n        ignoredActionPaths: ['payload.timestamp'],\n        // Ignore these paths in the state\n        ignoredPaths: ['items.dates']\n      }\n    }),\n    reduxWebsocketMiddleware\n  ]\n});\nexport default store;\n","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/store/slices/websocket.tsx",[],"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/components/Play/CommentList.tsx",["117"],"import React, { ReactElement } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Comment } from '../';\ninterface Props {}\n\nexport default function CommentList({}: Props): ReactElement {\n  const { comments } = useSelector((state: any) => state).websocket;\n  return (\n    <div style={{ height: 300, overflow: 'scroll' }}>\n      <h1>Comments</h1>\n      <div style={{ textAlign: 'left', margin: '0px 20px' }}>\n        {comments &&\n          comments.length > 0 &&\n          comments.map((comment: any, idx: number) => (\n            <Comment comment={comment} key={idx} />\n          ))}\n      </div>\n    </div>\n  );\n}\n","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/components/Play/Comment.tsx",[],"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/store/slices/contribute.tsx",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":12},{"ruleId":"122","severity":1,"message":"126","line":7,"column":8,"nodeType":"124","messageId":"125","endLine":7,"endColumn":12},{"ruleId":"122","severity":1,"message":"127","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":13},{"ruleId":"122","severity":1,"message":"128","line":4,"column":8,"nodeType":"124","messageId":"125","endLine":4,"endColumn":13},{"ruleId":"122","severity":1,"message":"129","line":85,"column":28,"nodeType":"124","messageId":"125","endLine":85,"endColumn":36},{"ruleId":"122","severity":1,"message":"130","line":85,"column":38,"nodeType":"124","messageId":"125","endLine":85,"endColumn":42},{"ruleId":"122","severity":1,"message":"131","line":2,"column":17,"nodeType":"124","messageId":"125","endLine":2,"endColumn":27},{"ruleId":"122","severity":1,"message":"132","line":2,"column":29,"nodeType":"124","messageId":"125","endLine":2,"endColumn":38},{"ruleId":"122","severity":1,"message":"133","line":9,"column":8,"nodeType":"124","messageId":"125","endLine":9,"endColumn":31},{"ruleId":"122","severity":1,"message":"126","line":10,"column":8,"nodeType":"124","messageId":"125","endLine":10,"endColumn":12},{"ruleId":"122","severity":1,"message":"134","line":11,"column":8,"nodeType":"124","messageId":"125","endLine":11,"endColumn":18},{"ruleId":"122","severity":1,"message":"135","line":12,"column":8,"nodeType":"124","messageId":"125","endLine":12,"endColumn":25},{"ruleId":"122","severity":1,"message":"136","line":13,"column":8,"nodeType":"124","messageId":"125","endLine":13,"endColumn":22},{"ruleId":"122","severity":1,"message":"137","line":15,"column":8,"nodeType":"124","messageId":"125","endLine":15,"endColumn":15},{"ruleId":"122","severity":1,"message":"138","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":14},{"ruleId":"122","severity":1,"message":"126","line":19,"column":8,"nodeType":"124","messageId":"125","endLine":19,"endColumn":12},{"ruleId":"122","severity":1,"message":"139","line":20,"column":10,"nodeType":"124","messageId":"125","endLine":20,"endColumn":21},{"ruleId":"140","severity":1,"message":"141","line":93,"column":32,"nodeType":"142","messageId":"143","endLine":93,"endColumn":41},{"ruleId":"122","severity":1,"message":"144","line":99,"column":10,"nodeType":"124","messageId":"125","endLine":99,"endColumn":24},{"ruleId":"122","severity":1,"message":"145","line":3,"column":3,"nodeType":"124","messageId":"125","endLine":3,"endColumn":12},{"ruleId":"140","severity":1,"message":"141","line":34,"column":36,"nodeType":"142","messageId":"143","endLine":34,"endColumn":45},{"ruleId":"122","severity":1,"message":"146","line":2,"column":41,"nodeType":"124","messageId":"125","endLine":2,"endColumn":47},{"ruleId":"122","severity":1,"message":"147","line":13,"column":8,"nodeType":"124","messageId":"125","endLine":13,"endColumn":29},{"ruleId":"122","severity":1,"message":"148","line":16,"column":10,"nodeType":"124","messageId":"125","endLine":16,"endColumn":17},{"ruleId":"122","severity":1,"message":"149","line":16,"column":19,"nodeType":"124","messageId":"125","endLine":16,"endColumn":23},{"ruleId":"122","severity":1,"message":"128","line":17,"column":8,"nodeType":"124","messageId":"125","endLine":17,"endColumn":13},{"ruleId":"140","severity":1,"message":"141","line":29,"column":30,"nodeType":"142","messageId":"143","endLine":29,"endColumn":39},{"ruleId":"122","severity":1,"message":"150","line":31,"column":54,"nodeType":"124","messageId":"125","endLine":31,"endColumn":62},{"ruleId":"151","severity":1,"message":"152","line":100,"column":50,"nodeType":"153","endLine":100,"endColumn":65},{"ruleId":"154","severity":1,"message":"155","line":4,"column":3,"nodeType":"124","messageId":"125","endLine":4,"endColumn":23},{"ruleId":"140","severity":1,"message":"141","line":6,"column":37,"nodeType":"142","messageId":"143","endLine":6,"endColumn":46},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'grey' is defined but never used.","'axios' is defined but never used.","'store' is defined but never used.","'roomcode' is assigned a value but never used.","'name' is assigned a value but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'EmojiTransportationIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'AssessmentIcon' is defined but never used.","'history' is defined but never used.","'Link' is defined but never used.","'useSelector' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'openAfterDelay' is assigned a value but never used.","'RefObject' is defined but never used.","'useRef' is defined but never used.","'FiberManualRecordIcon' is defined but never used.","'connect' is defined but never used.","'send' is defined but never used.","'comments' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-unused-vars","'getDefaultMiddleware' is defined but never used.","no-global-assign","no-unsafe-negation"]