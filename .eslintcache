[{"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/index.tsx":"1","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/reportWebVitals.ts":"2","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/App.tsx":"3","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/store/index.tsx":"4","/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/store/slices/application.tsx":"5"},{"size":616,"mtime":1606960142757,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1606959069677,"results":"8","hashOfConfig":"7"},{"size":556,"mtime":1606959069676,"results":"9","hashOfConfig":"7"},{"size":246,"mtime":1606959303223,"results":"10","hashOfConfig":"7"},{"size":621,"mtime":1606959520336,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vwak34",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/index.tsx",[],"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/reportWebVitals.ts",[],["24","25"],"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/App.tsx",[],"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/store/index.tsx",[],"/Users/bryangottschalk/PersonalProjects/buffoonery-player/src/store/slices/application.tsx",["26","27"],"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\ninterface ApplicationState {\n  myConnectionId: string;\n}\n\nconst initialState: ApplicationState = {\n    myConnectionId: ''\n};\n\nconst applicationSlice = createSlice({\n  name: 'application',\n  initialState,\n  reducers: {\n    setMyConnectionId: (state, { payload }) => {\n      state.myConnectionId = payload;\n    }\n  }\n});\n\nexport const { setMyConnectionId } = applicationSlice.actions;\n\nexport const getApplicationState = (state: { application: ApplicationState; }) => state.application;\n\nexport default applicationSlice.reducer;\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":23,"nodeType":"34","messageId":"35","endLine":1,"endColumn":39},{"ruleId":"32","severity":1,"message":"36","line":2,"column":8,"nodeType":"34","messageId":"35","endLine":2,"endColumn":13},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"@typescript-eslint/no-unused-vars","'createAsyncThunk' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]